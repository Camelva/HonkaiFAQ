import{_ as t,c as n,o as s,b as e,d as o}from"./app.2ceb7eee.js";const B=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"Input Buffer","slug":"input-buffer","link":"#input-buffer","children":[]}],"relativePath":"faq/87.md","lastUpdated":1670127511000}'),a={name:"faq/87.md"},i=e("h2",{id:"input-buffer",tabindex:"-1"},[o("Input Buffer "),e("a",{class:"header-anchor",href:"#input-buffer","aria-hidden":"true"},"#")],-1),h=e("p",null,"tags: input buffer",-1),u=e("p",null,"as with all (I guess, almost all) action games with move animation (non-cancelable), when you have to press buttons quickly, there is an input buffer i.e. if you press an input, it will be queued and executed at the next opportunity (this is because the game wants you to do moves one after another but can't reasonably expect you to press a button perfectly on the frame after the last move has finished)",-1),l=e("p",null,"if HF is still doing the end of her last AB, if you input A again, the A will get executed as soon as the AB finishes however, (1) the input buffer doesn't have unlimited time, and (2) it can only queue 1 input (it feels like 1 to me, so let's go with that) what this means is (1) if you input the A too early, it'll get queued and then expire before the last AB has finished, and so no A will get executed (2) if you input A and then B before the last AB has finished, the B will overwrite the A and you will get AB and then B",-1),r=e("p",null,"this is true for other moves in this game too you may find this on DA, whose ults have long, non-cancelable move animation sometimes you can input something before the last DA ult has finished and it never gets executed (because it has expired)",-1),d=e("p",null,"thus, for hf for example, you should input A as close to the end of the last AB as possible note that A has a very short animation and B has a very long animation, so you can input B right after A, but you must not do it such that A has not even started, because that would lead to B overwriting the A",-1),c=e("p",null,`disclaimer: this is based on imy's experience; it may not be 100% accurate, but it "feels" like how the game behaves`,-1),f=e("blockquote",null,[e("p",null,"This one needs some love.")],-1),p=[i,h,u,l,r,d,c,f];function m(_,b,y,g,v,A){return s(),n("div",null,p)}const x=t(a,[["render",m]]);export{B as __pageData,x as default};
